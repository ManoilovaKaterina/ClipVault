<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ClipboardManager.Utils;assembly=ClipboardManager">

    <!-- Converters -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <local:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
    <local:ByteArrayToImageConverter x:Key="ByteArrayToImageConverter"/>
    <local:FilePathsConverter x:Key="FilePathsConverter"/>
    <local:NotImageAndNotFileToVisibilityConverter x:Key="NotImageAndNotFileToVisibilityConverter"/>
    <local:PinnedHeaderConverter x:Key="PinnedHeaderConverter"/>

    <!-- Modern Dark Theme Colors -->
    <SolidColorBrush x:Key="PrimaryBackground" Color="#1a1d29"/>
    <SolidColorBrush x:Key="SecondaryBackground" Color="#252837"/>
    <SolidColorBrush x:Key="CardBackground" Color="#1b1e2a"/>
    <SolidColorBrush x:Key="AccentTeal" Color="#1dd1a1"/>
    <SolidColorBrush x:Key="AccentPurple" Color="#8b5cf6"/>
    <SolidColorBrush x:Key="AccentBlue" Color="#3b82f6"/>
    <SolidColorBrush x:Key="TextPrimary" Color="#f8fafc"/>
    <SolidColorBrush x:Key="TextSecondary" Color="#94a3b8"/>
    <SolidColorBrush x:Key="TextMuted" Color="#64748b"/>
    <SolidColorBrush x:Key="BorderColor" Color="#374151"/>
    <SolidColorBrush x:Key="HoverColor" Color="#374151"/>
    <SolidColorBrush x:Key="DangerColor" Color="#ef4444"/>

    <!-- Modern Button Style -->
    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource HoverColor}"/>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="#1dd1a1" ShadowDepth="0" BlurRadius="6" Opacity="0.3"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BorderColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Title Bar Button Style -->
    <Style x:Key="TitleBarButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource HoverColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Close Button Style -->
    <Style x:Key="CloseButton" BasedOn="{StaticResource TitleBarButton}" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DangerColor}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Compact Button Style for Item Actions -->
    <Style x:Key="CompactButton" BasedOn="{StaticResource ModernButton}" TargetType="Button">
        <Setter Property="Padding" Value="6,6"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="MinWidth" Value="50"/>
    </Style>

    <!-- Fixed TextBox Style with proper padding -->
    <Style x:Key="CompactTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Padding="8,4"
                                      VerticalAlignment="Center"
                                      VerticalScrollBarVisibility="Hidden"
                                      HorizontalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentTeal}"/>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="#1dd1a1" ShadowDepth="0" BlurRadius="6" Opacity="0.3"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Compact Danger Button -->
    <Style x:Key="CompactDangerButton" BasedOn="{StaticResource CompactButton}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource DangerColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource DangerColor}"/>
    </Style>

    <!-- Aligned Danger Button -->
    <Style x:Key="AlignedDangerButton" TargetType="Button" BasedOn="{StaticResource CompactDangerButton}">
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>

    <!-- Modern TabControl Style -->
    <Style x:Key="ModernTabControl" TargetType="TabControl">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <!-- Modern TabItem Style -->
    <Style x:Key="ModernTabItem" TargetType="TabItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            CornerRadius="6"
                            Margin="0,0,6,0">
                        <ContentPresenter x:Name="ContentSite"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource AccentTeal}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource HoverColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modern ListView Style with Fixed Scrolling -->
    <Style x:Key="ModernListView" TargetType="ListView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <ContentPresenter HorizontalAlignment="Stretch"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom ScrollBar Style -->
    <Style x:Key="CustomScrollBar" TargetType="ScrollBar">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Rectangle Fill="{StaticResource BorderColor}" Width="2" HorizontalAlignment="Center"/>
                        <Track Name="PART_Track" IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Rectangle Fill="{StaticResource AccentTeal}" 
                                                       Width="4" 
                                                       RadiusX="2" 
                                                       RadiusY="2"
                                                       Opacity="0.7"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Borderless Icon Button Style -->
    <Style x:Key="BorderlessIconButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="Transparent"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <TextBlock x:Name="content" Text="{TemplateBinding Content}"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource AccentTeal}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Pin Icon Button Style -->
    <Style x:Key="PinIconButton" TargetType="Button" BasedOn="{StaticResource BorderlessIconButton}">
        <Setter Property="Content" Value="&#xE840;"/> <!-- Unpinned Icon -->
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPinned}" Value="True">
                <Setter Property="Content" Value="&#xE718;"/> <!-- Pinned Icon -->
                <Setter Property="Foreground" Value="{StaticResource AccentPurple}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Modern Card Style -->
    <Style x:Key="ModernCard" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource CardBackground}"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="#000000" ShadowDepth="1" BlurRadius="6" Opacity="0.3"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modern ToggleSwitch Style -->
    <Style x:Key="ModernToggleSwitch" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="44"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="12">
                        <Ellipse x:Name="thumb" 
                                 Fill="{StaticResource TextSecondary}" 
                                 Width="16" 
                                 Height="16" 
                                 HorizontalAlignment="Left"
                                 Margin="3,0,0,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource AccentTeal}"/>
                            <Setter TargetName="thumb" Property="Fill" Value="White"/>
                            <Setter TargetName="thumb" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentTeal}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
